{"version":3,"sources":["routes/RestrictedRoute.tsx","api/authenticateApi.ts","redux/reducers/authenticate.ts","components/authentication/LoginForm.tsx","pages/LoginPage.tsx","components/authentication/SignUpForm.tsx","pages/SignUpPage.tsx","components/note/NotesPanelHeader.tsx","components/note/SearchBar.tsx","components/note/NotePanelPreview.tsx","components/note/NotesPreviewContainer.tsx","components/note/NotesPanel.tsx","redux/reducers/mode.ts","api/notesApi.ts","redux/reducers/notes.ts","components/note/DrawerNavigation.tsx","components/note/NoteNavigation.tsx","components/note/DropdownButtons.tsx","components/note/ToolBar.tsx","components/note/NoteContainer.tsx","components/note/GetStarted.tsx","routes/PrivateRoute.tsx","pages/NotePage.tsx","App.tsx","redux/store.ts","index.tsx","css/note.module.css"],"names":["RestrictedRoute","props","Component","component","rest","authenticated","useSelector","state","auth","render","to","loginRequest","username","password","a","axios","post","withCredentials","then","res","data","status","catch","error","response","request","Error","message","registerRequest","email","firstName","lastName","logoutRequest","delete","createAsyncThunk","credentials","rejectWithValue","authenticateAPI","console","log","authenticateSlice","createSlice","name","initialState","accessToken","id","reducers","updateAccessToken","action","payload","unauthorized","extraReducers","builder","addCase","fulfilled","rejected","actions","useStyles","makeStyles","theme","container","width","height","display","alignItems","justifyContent","paper","flexDirection","avatar","margin","spacing","backgroundColor","palette","primary","main","form","marginTop","submit","link","textDecoration","color","LoginForm","useState","errorMessage","setErrorMessage","classes","history","useHistory","dispatch","useDispatch","handleLoginRequest","e","preventDefault","target","value","push","Container","maxWidth","className","Avatar","Typography","variant","align","noValidate","onSubmit","TextField","required","fullWidth","label","type","autoFocus","autoComplete","Button","Grid","item","LoginPage","RegisterForm","setPassword","matchingPasswords","setMatchingPasswords","handleRegisterRequest","confirmpassword","comfirmpassword","err","xs","sm","onChange","SignUpPage","SignUpForm","panelHeaderContainer","position","addButton","top","right","transform","NotesPanelHeader","toggleDrawer","useEffect","undefined","document","querySelectorAll","addEventListener","IconButton","size","RouterLink","style","fontSize","searchBarContainer","searchBar","boxShadow","SearchBar","debouncedChangeHandler","useCallback","debounce","event","setSearchQuery","placeholder","InputProps","startAdornment","InputAdornment","notePreviewContainer","padding","noteCard","common","black","borderColor","border","light","activeLink","borderLeft","noteContent","NotePanelPreview","note","active","setActive","activeNote","notes","min","date","Date","publishedDate","getDate","getMonth","getFullYear","getHours","getMinutes","_id","Card","elevation","clsx","CardHeader","title","length","substring","subheader","CardContent","preview","notesContainer","maxHeight","overflow","dark","NotesPreviewContainer","displayedNotes","setDisplayedNotes","searchQuery","searchNotesRegex","RegExp","filterNotes","regex","searchedProducts","filter","test","direction","map","index","panelContainer","breakpoints","down","NotesPanel","modeSlice","lightMode","changeMode","newMode","getNotes","get","headers","ContentType","Authorization","addNote","content","updateNote","noteId","put","deleteNote","notesApi","notesSlice","updatedNoteIndex","findIndex","deletedNoteIndex","splice","newActiveNote","unsetActive","cleanNotes","drawer","DrawerNavigation","setDrawer","open","key","helperToggleDrawer","Drawer","anchor","onClose","role","onClick","navigationContainer","minHeight","grow","flexGrow","authenticationButton","marginLeft","withWidth","mode","previousState","StyledMenu","withStyles","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","white","MenuItem","CustomizedMenus","React","anchorEl","setAnchorEl","Boolean","setTimeout","formatOptions","forEach","span","pointerEvents","option","getAttribute","cmd_val","split","execCommand","currentTarget","ListItemText","toolBarContainer","minWidth","saveButton","editButton","editButtonsGroup","flexWrap","buttonGroup","ToolBar","editButtons","button","deleteFunction","marginRight","saveFunction","noteContainer","NoteContainer","useParams","newNote","setNewNote","setNote","setNoteContent","editDate","setEditDate","getFullMinutes","currentDate","createDate","displayedNote","find","unauthorizedAccess","editor","getElementById","innerHTML","innerText","savedNote","addNoteReducer","updateNoteReducer","deleteNoteReducer","noteStyles","darkMode","contentEditable","gutterBottom","getStartedContainer","GetStarted","PrivateRoute","alert","NotePage","lg","md","exact","path","App","createTheme","typography","fontWeightRegular","ThemeProvider","persistConfig","storage","reducer","combineReducers","authenticatonReducer","modeReducer","notesReducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","loading","module","exports"],"mappings":"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","file":"static/js/main.e683f563.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\n\r\n\r\n// Restricted routes could be accessed only if the client is not authenticated\r\nconst RestrictedRoute = (props: any) => {\r\n    const {component: Component, ...rest} = props;\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n    \r\n    return (\r\n        <Route {...rest} render={() => (!authenticated ? <Component /> : <Redirect to=\"/\" />)}/>\r\n    )\r\n};\r\n\r\nexport default RestrictedRoute","import axios from 'axios';\r\n\r\nconst localHostURL = 'http://localhost:5000';\r\n\r\nexport const loginRequest = async (username: string, password: string) => {\r\n    return axios.post(`/api/v1/authentication/login`, {username, password}, {withCredentials: true})\r\n      .then(res => ({\r\n        data: res.data,\r\n        status: res.status,\r\n      }))\r\n      .catch(error => {\r\n        if(error.response) {\r\n          return ({\r\n            data: error.response.data,\r\n            status: error.response.status,\r\n          });\r\n        } else if (error.request) {\r\n          throw new Error(error.request);\r\n        } else {\r\n          throw new Error(error.message);\r\n        };\r\n      });\r\n};\r\n\r\nexport const registerRequest = async (username: string, password: string, email: string, firstName: string, lastName: string) => {\r\n    return axios.post(`/api/v1/authentication/signup`, {username, password, email, firstName, lastName}, {withCredentials: true})\r\n      .then(res => ({\r\n        data: res.data,\r\n        status: res.status,\r\n      }))\r\n      .catch(error => {\r\n        if(error.response) {\r\n          return ({\r\n            data: error.response.data,\r\n            status: error.response.status,\r\n          });\r\n        } else if (error.request) {\r\n          throw new Error(error.request);\r\n        } else {\r\n          throw new Error(error.message);\r\n        };\r\n      });\r\n};\r\n\r\nexport const logoutRequest = async () => {\r\n  return axios.delete(`/api/v1/authentication/logout`, {withCredentials: true})\r\n    .then(res => ({\r\n      data: res.data,\r\n      status: res.status,\r\n    }))\r\n    .catch(error => {\r\n      if(error.response) {\r\n        return ({\r\n          data: error.response.data,\r\n          status: error.response.status,\r\n        });\r\n      } else if (error.request) {\r\n        throw new Error(error.request);\r\n      } else {\r\n        throw new Error(error.message);\r\n      };\r\n    });\r\n};\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as authenticateAPI from '../../api/authenticateApi';\r\n\r\n\r\ninterface IAuthenticate {\r\n    authenticated: boolean;\r\n    accessToken: string;\r\n    id: string;\r\n};\r\n\r\ninterface ILoginCredentials {\r\n    username: string;\r\n    password: string;\r\n};\r\n\r\ninterface IRegisterCredentials{\r\n    username: string;\r\n    password: string;\r\n    email: string\r\n    firstName: string;\r\n    lastName: string;\r\n};\r\n\r\ninterface ILogoutData {\r\n    message: string;\r\n};\r\n\r\n// default state of the store\r\nconst initialState: IAuthenticate = {\r\n    authenticated: false,\r\n    accessToken: '',\r\n    id: ''\r\n};\r\n\r\n// calling API request to login\r\nexport const loginRequest = createAsyncThunk(\r\n    'user/loginRequestStatus', \r\n    async (credentials: ILoginCredentials, { rejectWithValue }) => {\r\n        try {\r\n            const {username, password} = credentials;\r\n            const response = await authenticateAPI.loginRequest(username, password);\r\n            if(response.status === 401) return rejectWithValue({message: response.data.message, status: response.status});\r\n            console.log(response);\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        };\r\n    },\r\n);\r\n\r\n// calling API request to register\r\nexport const registerRequest = createAsyncThunk(\r\n    'user/registerRequestStatus',\r\n    async (credentials: IRegisterCredentials, { rejectWithValue }) => {\r\n        try {\r\n            const {username, password, email, firstName, lastName} = credentials;\r\n            const response = await authenticateAPI.registerRequest(username, password, email, firstName, lastName);\r\n            if(response.status === 400) return rejectWithValue({message: response.data.message, status: response.status});\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        };\r\n    },\r\n);\r\n\r\n// calling API request to logout\r\nexport const logoutRequest = createAsyncThunk(\r\n    'user/logoutRequestStatus',\r\n    async ( data: ILogoutData, {rejectWithValue}) => {\r\n        try {\r\n            const { message } = data;\r\n            const response = await authenticateAPI.logoutRequest();\r\n            console.log(message);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        };\r\n    },\r\n);\r\n\r\nexport const authenticateSlice = createSlice({\r\n    name: 'authenticate',\r\n    initialState,\r\n    reducers: {\r\n        // update accessToken if provided (after accessToken being expired)\r\n        updateAccessToken: (state, action) => {\r\n            state.accessToken = action.payload;\r\n        },\r\n        unauthorized: (state) => {\r\n            state.authenticated = false;\r\n            state.accessToken = '';\r\n            state.id = '';\r\n        }, \r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginRequest.fulfilled, (state, action) => {\r\n            state.authenticated = true;\r\n            state.id = action.payload.data.id;\r\n            state.accessToken = action.payload.data.accessToken;\r\n        });\r\n        builder.addCase(loginRequest.rejected, (state, action) => {\r\n            state.authenticated = false;\r\n        });\r\n        builder.addCase(registerRequest.fulfilled, (state, action) => {\r\n            state.authenticated = true;\r\n            state.id = action.payload.data.id;\r\n            state.accessToken = action.payload.data.accessToken;\r\n        });\r\n        builder.addCase(registerRequest.rejected, (state, action) => {\r\n            state.authenticated = false;\r\n        });\r\n        builder.addCase(logoutRequest.fulfilled, (state, action) => {\r\n            state.authenticated = false;\r\n            state.id = '';\r\n            state.accessToken = '';\r\n        });\r\n    },\r\n});\r\n\r\nexport const { unauthorized, updateAccessToken } = authenticateSlice.actions;\r\nexport default authenticateSlice.reducer;\r\n","import React, {useState} from 'react';\r\nimport { Typography, Avatar, Button, TextField, Grid, makeStyles, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginRequest } from '../../redux/reducers/authenticate'; \r\nimport { AppDispatch } from '../../redux/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    '&:hover': {\r\n      color: '#587D9F',\r\n    },\r\n  },\r\n}));\r\n\r\ntype ErrorMessage = {\r\n  error: boolean;\r\n  message: string;\r\n};\r\n\r\n\r\nconst LoginForm = () => {\r\n  // default state of a error message\r\n  const [errorMessage, setErrorMessage] = useState<ErrorMessage>({error: false, message: ''});\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  // handle login request function\r\n  const handleLoginRequest = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // create target object with the values from the form\r\n    const target = e.target as typeof e.target & {\r\n      username: { value: string };\r\n      password: { value: string };\r\n    };\r\n\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n    // if any of the fields are not filled\r\n    if(username === '' || password === '')\r\n    { setErrorMessage({error: true, message: 'Fields are requried'}); return; };\r\n    \r\n    // call the API request to login\r\n    dispatch(loginRequest({username, password}))\r\n      .then(res => {\r\n        // if something went wrong display error message\r\n        if(res.payload.status === 401) {setErrorMessage({error: true, message: res.payload.message}); return; };\r\n        // after successfuly logging in redirect to the main page\r\n        history.push('/');\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {errorMessage.error && <Typography color=\"error\" align=\"center\" variant=\"body1\">{errorMessage.message}</Typography>}\r\n        <form className={classes.form} noValidate onSubmit={handleLoginRequest}>\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"username\" label=\"Username\" type=\"text\" name=\"username\" autoFocus />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <RouterLink to=\"/signup\" className={classes.link}>\r\n                <Typography variant=\"body2\">Don't have an account? Sign Up</Typography>\r\n              </RouterLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from '../components/authentication/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <LoginForm />\r\n    )\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {useState} from 'react';\r\nimport { Typography, Avatar, Button, TextField, Grid, makeStyles, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link as RouterLink, } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerRequest } from '../../redux/reducers/authenticate'; \r\nimport { AppDispatch } from '../../redux/store';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center', \r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    '&:hover': {\r\n      color: '#587D9F',\r\n    },\r\n  },\r\n}));\r\n\r\ntype ErrorMessage = {\r\n  error: boolean;\r\n  message: string;\r\n};\r\n\r\n\r\nconst RegisterForm = () => {\r\n  const [password, setPassword] = useState<string>('');\r\n  const [matchingPasswords, setMatchingPasswords] = useState<boolean>(true);\r\n  const [errorMessage, setErrorMessage] = useState<ErrorMessage>({error: false, message: ''});\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const history = useHistory();\r\n\r\n  // handle register request function\r\n  const handleRegisterRequest = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // if the passwords do not match display the error and return\r\n    if(!matchingPasswords) { setErrorMessage({error: true, message: 'Passwords do not match!'}); return; };\r\n    \r\n    // creating the target object witht values\r\n    const target = e.target as typeof e.target & {\r\n      firstName: { value: string };\r\n      lastName: { value: string };\r\n      username: { value: string };\r\n      email: { value: string };\r\n      password: { value: string };\r\n      comfirmpassword: { value: string};\r\n    };\r\n\r\n    const email = target.email.value;\r\n    const firstName = target.firstName.value;\r\n    const lastName = target.lastName.value;\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n\r\n    // if any of the fields is not filled\r\n    if(email === '' || firstName === '' || lastName === '' || username === '' || password === '')\r\n    { setErrorMessage({error: true, message: 'Fields are requried!'}); return; };\r\n\r\n    const confirmpassword = target.comfirmpassword.value;\r\n    if(password !== confirmpassword) { setErrorMessage({error: true, message: 'Passwords do not match'}); return; };\r\n\r\n    // call API request to register\r\n    dispatch(registerRequest({username, password, email, firstName, lastName}))\r\n      .then((res: any) => {\r\n        const { message, status } = res.payload;\r\n        // if something went wrong display error message\r\n        if(status === 400) {setErrorMessage({error: true, message: message}); return; };\r\n        // after being successfuly registered redirect to the index page\r\n        history.push('/');\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // on confirm password change check if the passwords are matching\r\n  const handleMatchingPasswords = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const confirmPassword = e.target.value;\r\n    if(confirmPassword !== password){ setMatchingPasswords(false); return};\r\n    setMatchingPasswords(true);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        {errorMessage.error && <Typography color=\"error\" align=\"center\" variant=\"body1\">{errorMessage.message}</Typography>}\r\n        <form className={classes.form} noValidate onSubmit={handleRegisterRequest}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField autoComplete=\"fname\" name=\"firstName\" variant=\"outlined\" required fullWidth id=\"firstName\" label=\"First Name\" autoFocus />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"lastName\" label=\"Last Name\" name=\"lastName\" autoComplete=\"lname\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"username\" label=\"Username\" name=\"username\" type=\"text\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {setPassword(e.target.value)}}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField error={!matchingPasswords} variant=\"outlined\" required fullWidth name=\"comfirmpassword\" label=\"Confirm Password\" type=\"password\" id=\"confirmpassword\" onChange={handleMatchingPasswords}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <RouterLink to=\"/login\" className={classes.link}>\r\n                <Typography variant=\"body2\">Already have an account? Sign in</Typography>\r\n              </RouterLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport SignUpForm from '../components/authentication/SignUpForm';\r\n\r\nconst SignUpPage = () => {\r\n    return (\r\n        <SignUpForm />\r\n    )\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React, {useEffect} from 'react';\r\nimport { Typography, makeStyles, IconButton } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    panelHeaderContainer: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '10%',\r\n        width: '100%',\r\n    },\r\n    addButton: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        right: '20px',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n}));\r\n\r\ninterface IProps {\r\n    toggleDrawer?: () => void;\r\n}\r\n\r\nconst NotesPanelHeader = (props: IProps) => {\r\n    const classes = useStyles();\r\n    const {toggleDrawer} = props;\r\n\r\n    useEffect(() => {\r\n        // if the toggle drawer is not provided return\r\n        if(toggleDrawer === undefined) return;\r\n        const addButton = document.querySelectorAll('#add-new-note');\r\n        // add event listener to call the toggle drawer\r\n        addButton[1].addEventListener('click', () => {\r\n            toggleDrawer();\r\n        });\r\n\r\n    }, [toggleDrawer])\r\n\r\n    return (\r\n        <div className={classes.panelHeaderContainer}>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"primary\">Notes</Typography>\r\n            <IconButton className={classes.addButton} color=\"primary\" size=\"medium\" id=\"add-new-note\" component={RouterLink} to=\"/new\" ><AddIcon style={{fontSize: '2rem'}}/></IconButton>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotesPanelHeader;\r\n","import React, { useCallback } from 'react';\r\nimport { Grid, TextField, InputAdornment, makeStyles } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import debounce to delay calling changeHandler function\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchBarContainer: {\r\n        width: '100%',\r\n        height: '10%',\r\n    },\r\n    searchBar: {\r\n        width: '80%',\r\n        margin: 'auto',\r\n        boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\r\n        backgroundColor: 'white',\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\ninterface IProps {\r\n    setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst SearchBar = (props: IProps) => {\r\n    const classes = useStyles();\r\n    \r\n    // setting the search query\r\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        props.setSearchQuery(event.target.value);\r\n    };\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const debouncedChangeHandler = useCallback(\r\n        // delay 300 ms before calling changeHandler\r\n        debounce(changeHandler, 300)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    , []);\r\n\r\n    return (\r\n        <Grid container className={classes.searchBarContainer}>\r\n            <TextField \r\n                className={classes.searchBar}\r\n                id=\"search-input\"\r\n                placeholder=\"Search...\"\r\n                variant=\"outlined\"\r\n                onChange={debouncedChangeHandler}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { INote } from './NotesPreviewContainer';\r\nimport { Container, Typography, makeStyles, Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\ninterface IProps {\r\n    note: INote;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    notePreviewContainer: {\r\n        margin: '20px 0',\r\n        padding: '0',\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n    },\r\n    noteCard: {\r\n        color: theme.palette.common.black,\r\n        borderColor: theme.palette.primary.main,\r\n        border: '2px solid',\r\n        backgroundColor: theme.palette.primary.light,\r\n        '&:hover': {\r\n            boxShadow: '0px 4px 10px 0px rgba(0,0,0,0.64)',\r\n        },\r\n        '& .MuiCardHeader-subheader': {\r\n            color: theme.palette.common.black,\r\n        }\r\n    },\r\n    activeLink: {\r\n        borderLeft: `7px solid ${theme.palette.primary.main}`,\r\n    },\r\n    noteContent: {\r\n        padding: '0 16px',\r\n    },\r\n}));\r\n\r\nconst NotePanelPreview = (props: IProps) => {\r\n    const classes = useStyles();\r\n    const note = props.note;\r\n    const [active, setActive] = useState<boolean>(false);\r\n    const { activeNote } = useSelector((state: RootState) => state.notes);\r\n\r\n    useEffect(() => {\r\n        // if the certain note is active\r\n        if(activeNote === note) {\r\n            setActive(true);\r\n            return;\r\n        };   \r\n        setActive(false);\r\n    }, [activeNote, note]);\r\n\r\n    // creating published date value\r\n    const date = new Date(note.date);\r\n    // if the minutes are less than 10 add aditional '0'\r\n    const getFullMinutes = (min: number) => {\r\n        if(min < 10) return '0'+ min;\r\n        return min; \r\n    };\r\n    const publishedDate = date.getDate() + '.' + date.getMonth() + '.' + date.getFullYear() + ' ' + date.getHours() + ':' + getFullMinutes(date.getMinutes());\r\n\r\n    return (\r\n        <Container className={classes.notePreviewContainer} component={RouterLink} to={`${note._id}`}>\r\n            <Card elevation={3} className={clsx(classes.noteCard, active ? classes.activeLink : null)}>\r\n                <CardHeader\r\n                    title={note.title.length > 20 ? note.title.substring(0,17) + '...' : note.title}\r\n                    subheader={publishedDate}\r\n                />\r\n                <CardContent className={classes.noteContent}>\r\n                    <Typography variant=\"body2\">{note.preview.length > 150 ? note.preview.substring(0, 147) + '...' : note.preview}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default NotePanelPreview;\r\n","import React, { useEffect, useState } from 'react';\r\nimport NotePanelPreview from './NotePanelPreview';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    notesContainer: {\r\n        height: '80%',\r\n        maxHeight: '80%',\r\n        width: '80%',\r\n        padding: '0',\r\n        overflow: 'auto',\r\n        backgroundColor: theme.palette.primary.dark,\r\n    }\r\n}));\r\n\r\nexport interface INote {\r\n    _id: string;\r\n    active?: boolean;\r\n    title: string;\r\n    preview: string;\r\n    date: string;\r\n    content: string;\r\n}\r\n\r\ninterface IProps {\r\n    searchQuery: string;\r\n};\r\n\r\nconst NotesPreviewContainer = (props: IProps) => {\r\n    const classes = useStyles();\r\n    const { notes } = useSelector((state: RootState) => state.notes);\r\n    const [displayedNotes, setDisplayedNotes] = useState<Array<INote>>([]);\r\n\r\n    // on change of notes, and search query values\r\n    useEffect(() => {\r\n        // if the search query is empty display unfiltered notes\r\n        if(props.searchQuery === '') setDisplayedNotes(notes);\r\n        // creating a regex with search query\r\n        const searchNotesRegex = new RegExp(props.searchQuery, \"i\");\r\n        // filter notes with the given regex\r\n        filterNotes(searchNotesRegex);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.searchQuery, notes]);\r\n\r\n    const filterNotes = (regex: any ) => {\r\n        let searchedProducts = [...notes].filter(note => regex.test(note.preview));\r\n        setDisplayedNotes(searchedProducts);\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.notesContainer}>\r\n            <Grid container direction=\"column\">\r\n                {displayedNotes.map((note: INote, index) => (\r\n                    <NotePanelPreview key={index} note={note}/>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default NotesPreviewContainer;","import React, {useState} from 'react';\r\nimport NotesPanelHeader from './NotesPanelHeader';\r\nimport SearchBar from './SearchBar';\r\nimport NotesPreviewContainer from './NotesPreviewContainer';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    panelContainer: {\r\n        height: '100vh',\r\n        maxHeight: '100vh',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n}));\r\n\r\nconst NotesPanel = () => {\r\n    const classes = useStyles();\r\n    const [searchQuery, setSearchQuery] = useState<string>('');\r\n\r\n    return (\r\n        <div className={classes.panelContainer}>\r\n            <NotesPanelHeader />\r\n            <SearchBar setSearchQuery={setSearchQuery}/>\r\n            <NotesPreviewContainer searchQuery={searchQuery} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotesPanel;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ninterface IMode {\r\n    lightMode: boolean;\r\n};\r\n\r\n// default state of the store\r\nconst initialState: IMode = {\r\n    lightMode: true,\r\n};\r\n\r\nexport const modeSlice = createSlice({\r\n    name: 'mode',\r\n    initialState,\r\n    reducers: {\r\n        // change the mode state\r\n        changeMode: (state) => {\r\n            const newMode = !state.lightMode;\r\n            state.lightMode = newMode;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { changeMode } = modeSlice.actions;\r\nexport default modeSlice.reducer;","import axios from 'axios';\r\n\r\nconst localHostURL = 'http://localhost:5000';\r\n\r\n\r\n// API request to get the notes from database - private route => require accessToken to authorize\r\nexport const getNotes = async (accessToken: string) => {\r\n    // server has the access to the cookies in case access token is invalid\r\n    return axios.get(`/api/v1/note/getNotes`, {headers: { ContentType: 'application/json', Authorization: `Bearer ${accessToken}` }, withCredentials: true})\r\n}\r\n// API request to add new note - private route => require accessToken to authorize\r\nexport const addNote = async (title: string, content: string, preview: string, accessToken: string) => {\r\n    // server has the access to the cookies in case access token is invalid\r\n    return axios.post(`/api/v1/note/addNote`, {title, content, preview} ,{headers: { ContentType: 'application/json', Authorization: `Bearer ${accessToken}` }, withCredentials: true});\r\n};\r\n\r\n// API request to update a note - private route => require accessToken to authorize\r\nexport const updateNote = async (title: string, content: string, preview: string, accessToken: string, noteId: string) => {\r\n    // server has the access to the cookies in case access token is invalid\r\n    return axios.put(`/api/v1/note/editNote/${noteId}`, {title, content, preview}, {headers: { ContentType: 'application/json', Authorization: `Bearer ${accessToken}` }, withCredentials: true});\r\n};\r\n\r\n// API request to delete a note - private route => require accessToken to authorize\r\nexport const deleteNote = async (accessToken: string, noteId: string) => {\r\n    // server has the access to the cookies in case access token is invalid\r\n    return axios.delete(`/api/v1/note/deleteNote/${noteId}`, {headers: { ContentType: 'application/json', Authorization: `Bearer ${accessToken}` }, withCredentials: true});\r\n};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as notesApi from '../../api/notesApi';\r\n\r\ntype Note = {\r\n    _id: string;\r\n    active?: boolean;\r\n    title: string;\r\n    content: string;\r\n    preview: string;\r\n    date: string;\r\n};\r\n\r\ninterface INotes {\r\n    notes: Array<Note>,\r\n    activeNote: Note;\r\n};\r\n\r\n// default state of the store\r\nconst initialState: INotes = {\r\n    notes: [],\r\n    // keeping track of the active note in order to display it in the panel\r\n    activeNote: null,\r\n};\r\n\r\n// calling api request to get the notes from the database\r\nexport const getNotes = createAsyncThunk(\r\n    'user/getNotesStatus', \r\n    async (accessToken: string, { rejectWithValue }) => {\r\n        try {\r\n            const response = await notesApi.getNotes(accessToken);\r\n            if(response.status === 401) return rejectWithValue({message: response.data.message, status: response.status});\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue({message: error.response.data.message, status: error.response.status});\r\n        };\r\n    },\r\n);\r\n\r\nexport const notesSlice = createSlice({\r\n    name: 'notes',\r\n    initialState,\r\n    reducers: {\r\n        // add note to the redux store\r\n        addNote: (state, action) => {\r\n            state.notes.push(action.payload);\r\n        },\r\n        // update note in the redux store\r\n        updateNote: (state, action) => {\r\n            // find the index of the updated note\r\n            const updatedNoteIndex = state.notes.findIndex((note) => note._id === action.payload._id);\r\n            // replace the old note with the new updated one\r\n            state.notes[updatedNoteIndex] = action.payload;\r\n        },\r\n        // delete note in the redux store\r\n        deleteNote: (state, action) => {\r\n            // find the index of the deleted note\r\n            const deletedNoteIndex = state.notes.findIndex((note) => note._id === action.payload._id);\r\n            // removing the note from the store\r\n            state.notes.splice(deletedNoteIndex, 1);\r\n            // setting the active note to default state - null\r\n            state.activeNote = null;\r\n        },\r\n        // set active note\r\n        setActive: (state, action) => {\r\n            const newActiveNote: Note = action.payload;\r\n            state.activeNote = newActiveNote;\r\n        },\r\n        unsetActive: (state) => {\r\n            state.activeNote = null;\r\n        },\r\n        // clean notes - setting the store to default state\r\n        cleanNotes: (state) => {\r\n            state.activeNote = null;\r\n            state.notes = [];\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getNotes.fulfilled, (state, action) => {\r\n            state.notes = action.payload.data.notes;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { addNote, updateNote, deleteNote, setActive, cleanNotes, unsetActive } = notesSlice.actions;\r\nexport default notesSlice.reducer;","import React, {useState} from 'react';\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\nimport NotesPanelHeader from './NotesPanelHeader';\r\nimport SearchBar from './SearchBar';\r\nimport NotesPreviewContainer from './NotesPreviewContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: '100vw',\r\n        height: '100%',\r\n        backgroundColor: theme.palette.primary.dark\r\n    }\r\n}));\r\n\r\ntype Props = {\r\n    drawer: boolean;\r\n    setDrawer: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\n\r\nconst DrawerNavigation = (props: Props) => {\r\n    const classes = useStyles();\r\n    const [drawer, setDrawer] = [props.drawer, props.setDrawer];\r\n    const [searchQuery, setSearchQuery] = useState<string>('');\r\n\r\n    const toggleDrawer = (open: boolean) => ( event: React.KeyboardEvent | React.MouseEvent ) => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            ((event as React.KeyboardEvent).key === 'Tab' ||\r\n            (event as React.KeyboardEvent).key === 'Shift')\r\n        ) return;\r\n\r\n        setDrawer(open);\r\n    };\r\n\r\n    // helper function to close the drawer\r\n    const helperToggleDrawer = () => {\r\n        setDrawer(false);\r\n    };\r\n \r\n    const list = () => (\r\n        <div role=\"presentation\" className={classes.drawer}>\r\n            <NotesPanelHeader toggleDrawer={helperToggleDrawer}/>\r\n            <SearchBar setSearchQuery={setSearchQuery}/>\r\n            <div role=\"presentation\" onClick={toggleDrawer(false)}>\r\n                <NotesPreviewContainer searchQuery={searchQuery} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n          <Drawer anchor=\"left\" open={drawer} onClose={toggleDrawer(false)}>\r\n            {list()}\r\n          </Drawer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DrawerNavigation;","import React, { useState } from 'react';\r\nimport { Button, IconButton, Typography, makeStyles, Container } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logoutRequest } from '../../redux/reducers/authenticate'; \r\nimport { changeMode } from '../../redux/reducers/mode';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { cleanNotes } from '../../redux/reducers/notes';\r\n\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\r\n\r\nimport DrawerNavigation from './DrawerNavigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navigationContainer: {\r\n        display: 'flex',\r\n        height: '10%',\r\n        alignItems: 'center',\r\n        maxWidth: 'none',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 'auto',\r\n            minHeight: '10%',\r\n        }\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    authenticationButton: {\r\n        width: '100px',\r\n        marginLeft: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst NoteNavigation = (props: {width: Breakpoint}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const [drawer, setDrawer] = useState<boolean>(false);\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n    const { lightMode } = useSelector((state: RootState) => state.mode);\r\n\r\n    // call the Api request to logout\r\n    const handleLogOut = () => {\r\n        dispatch(logoutRequest({message: \"Logout request\"}))\r\n            .then(res => console.log(res))\r\n            // after being logout clear notes data in the redux store\r\n            .then(() => dispatch(cleanNotes()));\r\n    };\r\n\r\n    // handle change of the mode\r\n    const handleChangeMode = () => {\r\n        dispatch(changeMode())\r\n    };\r\n\r\n\r\n    return (\r\n        <Container className={classes.navigationContainer}>\r\n            {props.width === 'sm' || props.width === \"xs\" ? <IconButton color=\"primary\" onClick={() => setDrawer(previousState => !previousState)}><ArrowBackIosIcon /></IconButton> : <Typography variant=\"h4\" color=\"primary\">Awesome Notepad</Typography>}\r\n            <div className={classes.grow}>\r\n            </div>\r\n            <div>\r\n                <IconButton onClick={handleChangeMode} >\r\n                    {lightMode ? <Brightness2Icon color=\"primary\"/> : <Brightness7Icon color=\"primary\"/>}\r\n                </IconButton>\r\n                {!authenticated ? \r\n                    <Button color=\"primary\" variant=\"contained\" className={classes.authenticationButton} component={RouterLink} to=\"/login\">Login</Button>\r\n                    :\r\n                    <Button color=\"primary\" variant=\"contained\" className={classes.authenticationButton} onClick={handleLogOut}>Log Out</Button>\r\n                }\r\n            </div>\r\n            {props.width === 'sm' || props.width === \"xs\" ? <DrawerNavigation drawer={drawer} setDrawer={setDrawer}/> : null}\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default withWidth()(NoteNavigation);\r\n","import React, {useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { setTimeout } from 'timers';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.black,\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!Boolean(anchorEl)) return;\r\n    setTimeout(() => {\r\n        const formatOptions = document.querySelectorAll('[data-edit-menu]');\r\n        const divs = document.querySelectorAll('.MuiListItemText-root');\r\n\r\n        divs.forEach((span) => {\r\n            const sp = span as HTMLElement;\r\n            sp.style.pointerEvents = 'none';\r\n        });\r\n        \r\n        formatOptions.forEach(option => {\r\n            const bt = option as HTMLElement;\r\n            if (bt.getAttribute('listener') !== 'true') {\r\n                option.addEventListener('click', (e) => {\r\n                    e.preventDefault();\r\n                    const btn = e.target as HTMLElement;\r\n                    const cmd_val = btn.getAttribute('data-edit-menu').split(':');\r\n                    document.execCommand(cmd_val[0], false, cmd_val[1]);\r\n                });\r\n            };\r\n        });\r\n    }, 0)\r\n\r\n  }, [anchorEl]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Format\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClick={handleClose}\r\n      >\r\n        <StyledMenuItem data-edit-menu=\"formatBlock:H1\">\r\n          <ListItemText primary=\"Header 1\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem data-edit-menu=\"formatBlock:H2\">\r\n          <ListItemText primary=\"Header 2\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem data-edit-menu=\"formatBlock:H3\">\r\n          <ListItemText primary=\"Header 3\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem data-edit-menu=\"formatBlock:H4\">\r\n          <ListItemText primary=\"Header 4\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem data-edit-menu=\"formatBlock:H5\">\r\n          <ListItemText primary=\"Header 5\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}","import React, {useEffect} from 'react';\r\nimport { Button, IconButton, makeStyles, Container } from '@material-ui/core';\r\n\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\n\r\nimport DropdownButtons from './DropdownButtons';\r\nimport { INote } from './NotesPreviewContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolBarContainer: {\r\n        height: '10%',\r\n        maxWidth: 'none',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            height: 'auto',\r\n            minHeight: '10%',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'block',\r\n        }\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        minWidth: '30px',\r\n    },\r\n    saveButton: {\r\n        width: '100px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 64,\r\n            fontSize: '0.7rem'\r\n        }\r\n    },\r\n    editButton: {\r\n        '& .MuiIconButton-label':{\r\n            pointerEvents: 'none'\r\n        },\r\n    },\r\n    editButtonsGroup: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap', \r\n        [theme.breakpoints.down('md')]: {\r\n            maxWidth: '380px'\r\n        }\r\n    },\r\n    buttonGroup: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'flex',\r\n            // justifyContent: 'flex-end'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: '10px 0',\r\n        },\r\n    }\r\n}));\r\n\r\ninterface IProps {\r\n    saveFunction: () => void;\r\n    deleteFunction: () => void;\r\n    note: INote | null | undefined;\r\n}\r\n\r\nconst ToolBar = (props: IProps) => {\r\n    const classes = useStyles();\r\n    \r\n    // on component mount\r\n    useEffect(() => {\r\n        const editButtons = document.querySelectorAll('[data-edit]');\r\n        const spans = document.querySelectorAll('[data-edit] .MuiIconButton-label');\r\n        \r\n        // disabling clicking on the span\r\n        spans.forEach((span) => {\r\n            const sp = span as HTMLElement;\r\n            sp.style.pointerEvents = 'none';\r\n        });\r\n\r\n        // add event listener on click event\r\n        editButtons.forEach(button => {\r\n            const bt = button as HTMLButtonElement;\r\n            // if the button doesn't have an event listener yet\r\n            if (bt.getAttribute('listener') !== 'true') {\r\n                button.addEventListener('click', (e) => {\r\n                    e.preventDefault();\r\n                    const btn = e.target as HTMLElement;\r\n                    // get the command data from the button\r\n                    const cmd_val = btn.getAttribute('data-edit').split(':');\r\n                    // executing the command to format chosen text\r\n                    document.execCommand(cmd_val[0], false, cmd_val[1]);\r\n                });\r\n            };\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <Container className={classes.toolBarContainer}>\r\n            <div className={classes.editButtonsGroup}>\r\n                <IconButton data-edit=\"bold\" color=\"primary\" className={classes.editButton}><FormatBoldIcon/></IconButton>\r\n                <IconButton data-edit=\"italic\" color=\"primary\" className={classes.editButton}><FormatItalicIcon/></IconButton>\r\n                <IconButton data-edit=\"underline\" color=\"primary\" className={classes.editButton}><FormatUnderlinedIcon/></IconButton>\r\n                <IconButton data-edit=\"justifyLeft\" color=\"primary\" className={classes.editButton}><FormatAlignLeftIcon/></IconButton>\r\n                <IconButton data-edit=\"justifyCenter\" color=\"primary\" className={classes.editButton}><FormatAlignCenterIcon/></IconButton>\r\n                <IconButton data-edit=\"justifyRight\" color=\"primary\" className={classes.editButton}><FormatAlignRightIcon/></IconButton>\r\n                <IconButton data-edit=\"justifyFull\" color=\"primary\" className={classes.editButton}><FormatAlignJustifyIcon/></IconButton>\r\n                <IconButton data-edit=\"insertUnorderedList\" color=\"primary\" className={classes.editButton}><FormatListBulletedIcon/></IconButton>\r\n                <IconButton data-edit=\"insertOrderedList\" color=\"primary\" className={classes.editButton}><FormatListNumberedIcon/></IconButton>\r\n\r\n                <DropdownButtons />\r\n            </div>\r\n            <div className={classes.grow}></div>\r\n            <div className={classes.buttonGroup}>\r\n                { props.note !== null && props.note !== undefined && <Button color=\"secondary\" variant=\"contained\" className={classes.saveButton} onClick={props.deleteFunction} style={{marginRight: 10}}>Delete</Button> }\r\n                <Button color=\"primary\" variant=\"contained\" className={classes.saveButton} onClick={props.saveFunction}>Save</Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ToolBar;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Typography, makeStyles, Button } from '@material-ui/core';\r\nimport ToolBar from './ToolBar';\r\nimport noteStyles from '../../css/note.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from '../../redux/store';\r\nimport { addNote, updateNote, deleteNote } from '../../api/notesApi';\r\nimport { INote } from './NotesPreviewContainer';\r\nimport { addNote as addNoteReducer, updateNote as updateNoteReducer, setActive, unsetActive, deleteNote as deleteNoteReducer, cleanNotes } from '../../redux/reducers/notes';\r\nimport { unauthorized, updateAccessToken } from '../../redux/reducers/authenticate';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    noteContainer: {\r\n        height: 'calc(80% - 48px)',\r\n        maxHeight: 'calc(80% - 48px)',\r\n        padding: '24px',\r\n    },\r\n    date: {\r\n        marginTop: theme.spacing(5),\r\n        color: theme.palette.common.black,\r\n    },\r\n    errorMessage: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\ninterface IParams {\r\n    id: string;\r\n};\r\n\r\nconst NoteContainer = () => {\r\n    const classes = useStyles();\r\n    const { id } = useParams<IParams>();\r\n    const [newNote, setNewNote] = useState<boolean>(false);\r\n    const [note, setNote] = useState<INote>(null);\r\n    const [noteContent, setNoteContent] = useState<string>('');\r\n    const [editDate, setEditDate] = useState<string>('');\r\n    const { accessToken } = useSelector((state: RootState) => state.auth);\r\n    const { notes } = useSelector((state: RootState) => state.notes);\r\n    const { lightMode } = useSelector((state: RootState) => state.mode);\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const history = useHistory();\r\n\r\n    // if the minutes are less than 10 add aditional '0'\r\n    const getFullMinutes = (min: number) => {\r\n        if(min < 10) return '0'+ min;\r\n        return min; \r\n    };\r\n\r\n    useEffect(() => {\r\n        if(id === \"new\") { \r\n            setNoteContent(''); \r\n            setNewNote(true);\r\n            setNote(null);\r\n            const currentDate = new Date();\r\n            const createDate = currentDate.getDate() + '.' + currentDate.getMonth() + '.' + currentDate.getFullYear() + ' ' + currentDate.getHours() + ':' + getFullMinutes(currentDate.getMinutes());\r\n            setEditDate(createDate);\r\n            dispatch(unsetActive());       \r\n        }\r\n        else {\r\n            setNewNote(false);\r\n            // find the note in the database\r\n            const displayedNote = notes.find((note: INote) => note._id === id);\r\n            setNote(displayedNote);\r\n            if(displayedNote === undefined) return;\r\n            setNoteContent(displayedNote.content);\r\n\r\n            // creating published date value\r\n            const date = new Date(displayedNote.date);\r\n            const publishedDate = date.getDate() + '.' + date.getMonth() + '.' + date.getFullYear() + ' ' + date.getHours() + ':' + getFullMinutes(date.getMinutes());\r\n            \r\n            setEditDate(publishedDate);\r\n            // set the current note to be active\r\n            dispatch(setActive(displayedNote));\r\n        };\r\n\r\n    }, [id, notes, dispatch]);\r\n\r\n    const getNoteContent = () => {\r\n        const editor = document.getElementById('note-editor');\r\n        // get the formated data in the editor\r\n        const content = editor.innerHTML;\r\n        // get the text data in the editor\r\n        const preview = editor.innerText;\r\n        const title = editor.innerText.substring(0, 20);\r\n        \r\n        // if it is new note than call API request to create new note\r\n        if(newNote) {\r\n            addNote(title, content, preview, accessToken)\r\n                .then((res) => {\r\n                   if(res.data.accessToken !== undefined) dispatch(updateAccessToken(res.data.accessToken));\r\n                   return res.data.savedNote;\r\n                })\r\n                .then((data) => {\r\n                    // add new note to the redux store\r\n                    dispatch(addNoteReducer(data));\r\n                    const {_id} = data;\r\n                    // redirect to the note URL\r\n                    history.push(`/${_id}`);\r\n                })\r\n                .catch((err) => {\r\n                    const status = err.response.status;\r\n                    if(status === 401) unauthorizedAccess();\r\n                });\r\n            return;\r\n        };\r\n\r\n        // if client wants to update the note call API request to update note\r\n        updateNote(title, content, preview, accessToken, id)\r\n            .then((res) => {\r\n                if(res.data.accessToken !== undefined) dispatch(updateAccessToken(res.data.accessToken));\r\n                return res.data.note\r\n            })\r\n            // update note in the database\r\n            .then((data) => dispatch(updateNoteReducer(data)))\r\n            .catch((err) => {\r\n                const status = err.response.status;\r\n                if(status === 401) unauthorizedAccess();\r\n            });\r\n        return;\r\n    };\r\n\r\n    // call API request to delete note\r\n    const deleteNoteFunction = () => {\r\n        deleteNote(accessToken, id)\r\n            .then(res => {\r\n                if(res.data.accessToken !== undefined) dispatch(updateAccessToken(res.data.accessToken));\r\n            })\r\n            // delete note in the redux store\r\n            .then(() => dispatch(deleteNoteReducer(note)))\r\n            // redirect to the main page\r\n            .then(() => history.push('/'))\r\n            .catch((err) => {\r\n                const status = err.response.status;\r\n                if(status === 401) unauthorizedAccess();\r\n            });\r\n    };\r\n\r\n    const unauthorizedAccess = () => {\r\n        dispatch(cleanNotes());\r\n        dispatch(unauthorized());\r\n    }\r\n\r\n    // on component mount display the the formated data of the note\r\n    useEffect(() => {\r\n        const editor = document.getElementById('note-editor');\r\n        if(editor === null) return;\r\n        editor.innerHTML = noteContent;\r\n    }, [newNote, noteContent])\r\n\r\n    if(note !== undefined) {\r\n        return (\r\n            <>\r\n                <ToolBar saveFunction={getNoteContent} deleteFunction={deleteNoteFunction} note={note}/>\r\n                <div className={classes.noteContainer}>\r\n                    <div className={clsx(noteStyles.editor, !lightMode ? noteStyles.darkMode : null)} id=\"note-editor\" contentEditable=\"true\"></div> \r\n    \r\n                    <Typography variant=\"h6\" className={classes.date}>Last Edit: {editDate}</Typography>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={classes.errorMessage}>\r\n                <Typography variant=\"h6\" align=\"center\">Unfortunately this note doesn't exist.</Typography>\r\n                <Typography variant=\"subtitle1\" align=\"center\" gutterBottom>Please, click on the button below to share your thoughts!</Typography>\r\n                <Button color=\"primary\" variant=\"contained\" component={RouterLink} to='/new'>Get started</Button>\r\n            </div>\r\n        )\r\n    }\r\n};  \r\n\r\nexport default NoteContainer;\r\n","import React from 'react';\r\nimport { Typography, makeStyles, Container, Button } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    getStartedContainer: {\r\n        height: '90%',\r\n        padding: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '0 5px'\r\n        },\r\n        color: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nconst GetStarted = () => {\r\n    const classes = useStyles();\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n    \r\n    return (\r\n        <Container className={classes.getStartedContainer}>\r\n            <Typography variant=\"h6\" align=\"center\">Click on the button to get started with us!</Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" gutterBottom>Write down your thoughts...</Typography>\r\n            <Button color=\"primary\" variant=\"contained\" component={RouterLink} to={authenticated ? '/new' : '/login'}>Get started</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default GetStarted\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\n\r\n// Private routes could be accessed only if the client is authenticated\r\nconst PrivateRoute = (props: any) => {\r\n    const {component: Component, ...rest} = props;\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n\r\n    if(!authenticated) alert('Sign In Please.')\r\n\r\n    return (\r\n        <Route {...rest} render={() => (authenticated ? <Component /> : <Redirect to=\"/\" />)}/>\r\n    )\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport NotesPanel from '../components/note/NotesPanel';\r\nimport NoteNavigation from '../components/note/NoteNavigation';\r\nimport NoteContainer from '../components/note/NoteContainer';\r\nimport GetStarted from '../components/note/GetStarted';\r\n\r\n// Private route is used to display the note editor - accessible only if the client is authenticated\r\nimport PrivateRoute from '../routes/PrivateRoute';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    editor: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: '100vh',\r\n            overflow: 'auto'\r\n        },\r\n    },\r\n}));\r\n\r\nconst NotePage = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container}>\r\n            <Grid item lg={3} md={4} sm={12}>\r\n                <NotesPanel />\r\n            </Grid>\r\n            <Grid item lg={9} md={8} sm={12} className={classes.editor}>\r\n                <NoteNavigation />\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/:id\" component={NoteContainer} />\r\n                    <Route path=\"/\" component={GetStarted} />\r\n                </Switch>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default NotePage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \nimport RestrictedRoute from './routes/RestrictedRoute';\n\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\nimport NotePage from './pages/NotePage';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './redux/store';\nimport { getNotes, cleanNotes } from './redux/reducers/notes';\nimport { unauthorized } from './redux/reducers/authenticate';\n\nimport { createTheme } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst App = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { accessToken } = useSelector((state: RootState) => state.auth);\n  const { lightMode } = useSelector((state: RootState) => state.mode);\n\n  // get the notes from the database on page load and store them in redux for easier access\n  dispatch(getNotes(accessToken))\n      .then((res: any) => {\n        const { status } = res.payload;\n        // if the response status is 401 clear stored data in redux\n        if(status === 401) {\n          dispatch(unauthorized());\n          dispatch(cleanNotes());\n        };\n      })\n      .catch(err => console.log(err.response));\n\n  const colorPaletteLightMode = {\n    primary: {\n      main: '#009788',\n      dark: '#F8F8F8',\n      light: '#ffffff',\n    },\n\n  };\n  \n  const colorPaletteDarkMode = {\n    primary: {\n      main: '#009788',\n      dark: '#2a2d37',\n      light: '#22252d'\n    },\n    common: {\n      black: '#ffffff'\n    }\n  };\n\n  const theme = createTheme({\n    palette: lightMode ? colorPaletteLightMode : colorPaletteDarkMode,\n    typography: {\n      fontWeightRegular: 'lighter',\n    }\n  });\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <RestrictedRoute exact path=\"/login\" component={LoginPage} />\n            <RestrictedRoute exact path=\"/signup\" component={SignUpPage} />\n            <Route path=\"/\" component={NotePage} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport authenticatonReducer from './reducers/authenticate';\r\nimport modeReducer from './reducers/mode';\r\nimport notesReducer from './reducers/notes';\r\n\r\nimport { persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    auth: authenticatonReducer,\r\n    mode: modeReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n// in order to not loose all the data on every page load, storing data in localStorage\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\n\n\n// presisting data in localStorage\nlet persistor = persistStore(store);\n\nReactDOM.render(\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkMode\":\"note_darkMode__1k0L-\"};"],"sourceRoot":""}